[runs]
## options related to the run to be analyzed and reference runs to be
## compared against

# mainRunName is a name that identifies the simulation being analyzed.
mainRunName = CONUS.100km.NAEC60to30cr8.20181218

# config file for a control run to which this run will be compared.  The
# analysis should have already been run to completion once with this config
# file, so that the relevant MPAS climatologies already exist and have been
# remapped to the comparison grid.  Leave this option commented out if no
# control run is desired.
# controlRunConfigFile = /path/to/config/file

# config file for a main run on which the analysis was already run to
# completion.  The relevant MPAS climatologies already exist and have been
# remapped to the comparison grid and time series have been extracted.
# Leave this option commented out if the analysis for the main run should be
# performed.
# mainRunConfigFile = /path/to/config/file

[execute]
parallelTaskCount = 6
ncclimoParallelMode = serial

[input]
## options related to reading in the results to be analyzed

# directory containing model results
baseDirectory = /lustre/scratch4/turquoise/.mdt2/kehoch/e3sm/mesh_project/transition/CONUS.100km.NAEC60to30cr8.20181218/ocean/global_ocean/NAEC60to30cr8/spin_up/test_final_settings

#runSubdirectory = /lustre/scratch4/turquoise/.mdt2/kehoch/e3sm/mesh_project/transition/CONUS.100km.NAEC60to30cr8.20181218/ocean/global_ocean/NAEC60to30cr8/spin_up/spin_up1/restarts
#oceanHistorySubdirectory = analysis_members
# names of ocean and sea ice meshes (e.g. oEC60to30v3, oQU240v3, oRRS30to10v3, etc.)
mpasMeshName = NAEC60to30cr8

oceanNamelistFileName = namelist.ocean

oceanStreamsFileName = streams.ocean.analysis

runSubdirectory = .
oceanHistorySubdirectory = .
[diagnostics]
#baseDirectory = /lustre/scratch4/turquoise/.mdt2/kehoch/e3sm/mesh_project/transition/CONUS.100km.NAEC60to30cr8.20181218/ocean/global_ocean/NAEC60to30cr8/spin_up/test_final_settings
baseDirectory = /usr/projects/climate/SHARED_CLIMATE/diagnostics
# Directory for mapping files (if they have been generated already). If mapping
# files needed by the analysis are not found here, they will be generated and
# placed in the output mappingSubdirectory
#mappingSubdirectory = /lustre/scratch4/turquoise/xylar/analysis/CONUS.100km.NAEC60to30cr8.20181218/mapping

regionMaskSubdirectory = /lustre/scratch4/turquoise/.mdt2/kehoch/e3sm/mesh_project/transition/CONUS.100km.NAEC60to30cr8.20181218/ocean/global_ocean/NAEC60to30cr8/spin_up/test_final_settings

[output]
## options related to writing out plots, intermediate cached data sets, logs,
## etc.

# directory where analysis should be written
baseDirectory = /path/to/analysis/output

# a list of analyses to generate.  Valid names can be seen by running:
#   mpas_analysis --list
# This command also lists tags for each analysis.
# Shortcuts exist to generate (or not generate) several types of analysis.
# These include:
#   'all' -- all analyses will be run
#   'all_<tag>' -- all analysis with a particular tag will be run
#   'all_<component>' -- all analyses from a given component (either 'ocean'
#                        or 'seaIce') will be run
#   'only_<component>', 'only_<tag>' -- all analysis from this component or
#                                       with this tag will be run, and all
#                                       analysis for other components or
#                                       without the tag will be skipped
#   'no_<task_name>' -- skip the given task
#   'no_<component>', 'no_<tag>' -- in analogy to 'all_*', skip all analysis
#                                   tasks from the given compoonent or with
#                                   the given tag.  Do
#                                      mpas_analysis --list
#                                   to list all task names and their tags
# an equivalent syntax can be used on the command line to override this
# option:
#    mpas_analysis config.analysis --generate \
#         all,no_ocean,all_timeSeries
# All tasks with tag "landIceCavities" are disabled because this run did not
# include land-ice cavities.
generate = ['only_ocean', 'no_landIceCavities', 'no_mld', 'no_BGC',
            'no_meridionalHeatTransport', 'no_timeSeriesTemperatureAnomaly',
            'no_timeSeriesSalinityAnomaly', 'no_timeSeriesOHCAnomaly',
            'no_timeSeriesSST', 'no_indexNino34', 'no_min', 'no_max']

[climatology]
## options related to producing climatologies, typically to compare against
## observations and previous runs

# the first year over which to average climatalogies
startYear = 1
# the last year over which to average climatalogies
endYear = 10

[timeSeries]
## options related to producing time series plots, often to compare against
## observations and previous runs

# start and end years for timeseries analysis. Use endYear = end to indicate
# that the full range of the data should be used.  If errorOnMissing = False,
# the start and end year will be clipped to the valid range.  Otherwise, out
# of bounds values will lead to an error.  In a "control" config file used in
# a "main vs. control" analysis run, the range of years must be valid and
# cannot include "end" because the original data may not be available.
startYear = 1
endYear = end

[index]
## options related to producing nino index.

# start and end years for El Nino 3.4 analysis. Use endYear = end to indicate
# that the full range of the data should be used.  If errorOnMissing = False,
# the start and end year will be clipped to the valid range.  Otherwise, out
# of bounds values will lead to an error.  In a "control" config file used in
# a "main vs. control" analysis run, the range of years must be valid and
# cannot include "end" because the original data may not be available.
startYear = 1
endYear = end

[climatologyMapBGC]
preindustrial = True

[climatologyMapSose]
fieldList = ['temperature', 'salinity', 'potentialDensity',
             'zonalVelocity', 'meridionalVelocity', 'velocityMagnitude']

