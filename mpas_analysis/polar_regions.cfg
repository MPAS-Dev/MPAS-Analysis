[output]
## options related to writing out plots, intermediate cached data sets, logs,
## etc.

# a list of analyses to generate.  Valid names can be seen by running:
#   mpas_analysis --list
generate = ['all']

[climatologyMapWoa]
## options related to plotting climatology maps of Temperature and Salinity
## fields at various levels, including the sea floor against control model
## results and WOA climatological data

# comparison grid(s) on which to plot analysis
comparisonGrids = ['antarctic', 'arctic']

# list of depths in meters (positive up) at which to analyze, 'top' for the
# sea surface. Note that, for seasons='ANN', depths can be as deep as 5500 m,
# otherwise use a maximum depth of 1500 m.
depths = ['top', -50, -200, -400, -600, -800]

[climatologyMapWoaTemperature]
## options related to plotting climatology maps of potential temperature
## at various levels, including the sea floor against control model results
## and WOA23 climatological data

# A dictionary with keywords for the norm
normArgsResult = {'vmin': -2., 'vmax': 2.}

[climatologyMapWoaSalinity]
## options related to plotting climatology maps of salinity
## at various levels, including the sea floor against control model results
## and WOA23 climatological data

# A dictionary with keywords for the norm
normArgsResult = {'vmin': 33.8, 'vmax': 35.0}


[regionalTSDiagrams]
## options related to plotting T/S diagrams of ocean regions

# the names of region groups to plot, each with its own section below
regionGroups = ['Ocean Basins', 'Arctic Ocean Regions',
                'ISMIP6 Greenland Regions', 'Antarctic Regions']

[TSDiagramsForISMIP6GreenlandRegions]
## options related to plotting T/S diagrams of Greenland regions

# list of regions to plot or ['all'] for all regions in the masks file.
# See "regionNames" in the antarcticRegions masks file in
# regionMaskSubdirectory for details.
regionNames = ['all']

# The minimum and maximum depth over which fields are plotted, default is
# to take these values from the geojson feature's zmin and zmax properties.
zmin = -1000
zmax = 0

[TSDiagramsForAntarcticRegions]
## options related to plotting T/S diagrams of Antarctic regions

# list of regions to plot or ['all'] for all regions in the masks file.
# See "regionNames" in the antarcticRegions masks file in
# regionMaskSubdirectory for details.
regionNames = ['all']

# The minimum and maximum depth over which fields are plotted, default is
# to take these values from the geojson feature's zmin and zmax properties.
zmin = -1000
zmax = 0

[TSDiagramsForArcticOceanRegions]
## options related to plotting T/S diagrams of Antarctic regions

# list of regions to plot or ['all'] for all regions in the masks file.
# See "regionNames" in the antarcticRegions masks file in
# regionMaskSubdirectory for details.
regionNames = ['Baffin Bay', 'Barents Sea', 'Canada Basin', 'Greenland Sea', 'Irminger Sea', 'Kara Sea', 'Labrador Sea', 'Norwegian Sea', 'Arctic Ocean - no Barents, Kara Seas']

[TSDiagramsForOceanBasins]
## options related to plotting T/S diagrams of major ocean basins

# list of regions to plot or ['all'] for all regions in the masks file.
# See "regionNames" in the antarcticRegions masks file in
# regionMaskSubdirectory for details.
regionNames = ["Atlantic_Basin", "Pacific_Basin", "Indian_Basin",
               "Arctic_Basin", "Southern_Ocean_Basin",
               "Global Ocean", "Global Ocean 65N to 65S"]


[soseTransects]
## options related to plotting model vs. Southern Ocean State Estimate (SOSE)
## transects.

# longitudes of transects
# Western Weddell 1, Filchner (318=42W), Western Weddell 2 (325=35W),
# West Maud Rise, Fimbul (0), Amery (75E), Totten (117E),
# George V coast, Merzt (145E), Wilkes (160E), Western Ross (184=176W),
# Center Ross (187=173W), Eastern Ross (198=162W),
# Amudsen, Thwaites (253=107W), Bellingshausen (280=80W),
# West Antarctica (288=72W)
# Note: Transects at 325, 145, 160, 184, 198 and 288 are chosen for comparison with
#       Whitworth et al. (1998) doi: 10.1029/AR075p0001, Figs. 3, 7, 6, 5, 4, 10, respectively.
longitudes = [318., 325., 0., 75., 117., 145., 160., 184., 187., 198., 253.,
              280., 288.]

# The approximate horizontal resolution (in km) of each transect.  Latitude/
# longitude between observation points will be subsampled at this interval.
# Use 'obs' to indicate no subsampling. Use 'mpas' to indicate plotting of
# model data on the native grid, in which case comparison with observations
# will take place on the observation grid.
horizontalResolution = mpas

# The name of the vertical comparison grid.  Valid values are 'mpas' for the
# MPAS vertical grid, 'obs' to use the locations of observations or
# any other name if the vertical grid is defined by 'verticalComparisonGrid'
verticalComparisonGridName = mpas

# A range for the y axis (if any)
verticalBounds = [-1500., 0.]

# a list of fields top plot for each transect.
fieldList = ['temperature', 'salinity', 'potentialDensity', 'zonalVelocity',
             'meridionalVelocity', 'velocityMagnitude',
             'potentialDensityContour']


[soseTemperatureTransects]
# options related to plotting SOSE transects of potential temperature

# whether the colormap is indexed or continuous
colormapTypeResult = indexed
# color indices into colormapName for filled contours
colormapIndicesResult = [0, 14, 28, 57, 85, 113, 125, 142, 170, 180, 198, 227,
                         240, 255]
# colormap levels/values for contour boundaries
colorbarLevelsResult = [-1.6, -1.2, -0.4, 0.0, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0,
                        3.0, 4.0, 6.0]

# whether the colormap is indexed or continuous
colormapTypeDifference = indexed
# color indices into colormapName for filled contours
colormapIndicesDifference = [0, 28, 57, 85, 113, 128, 128, 142, 170, 198, 227,
                             255]
# colormap levels/values for contour boundaries
colorbarLevelsDifference = [-2, -1.5, -1.25, -1, -0.2, 0, 0.2, 1, 1.25, 1.5, 2]

[soseSalinityTransects]
## options related to plotting SOSE transects of salinity

# whether the colormap is indexed or continuous
colormapTypeResult = indexed
# color indices into colormapName for filled contours
colormapIndicesResult = [0, 20, 40, 80, 120, 140, 160, 180, 200, 220, 240, 255]
# colormap levels/values for contour boundaries
colorbarLevelsResult = [34.1, 34.2,  34.3,  34.4,  34.5, 34.55, 34.6, 34.65,
                        34.68, 34.7, 35.0]

# whether the colormap is indexed or continuous
colormapTypeDifference = indexed
# color indices into colormapName for filled contours
colormapIndicesDifference = [0, 28, 57, 85, 113, 128, 128, 142, 170, 198, 227,
                             255]
# colormap levels/values for contour boundaries
colorbarLevelsDifference = [-0.5, -0.2, -0.1, -0.05, -0.02, 0,  0.02, 0.05,
                            0.1, 0.2, 0.5]


[woaTransects]
## options related to plotting model vs. World Ocean Atlas 2023 (WOA23)
## transects.

# Times for comparison times (Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct,
# Nov, Dec, JFM, AMJ, JAS, OND, ANN)
seasons =  ['ANN', 'JFM', 'JAS']

# longitudes of transects
# Western Weddell 1, Filchner (318=42W), Western Weddell 2 (325=35W),
# West Maud Rise, Fimbul (0), Amery (75E), Totten (117E),
# George V coast, Merzt (145E), Wilkes (160E), Western Ross (184=176W),
# Center Ross (187=173W), Eastern Ross (198=162W),
# Amudsen, Thwaites (253=107W), Bellingshausen (280=80W),
# West Antarctica (288=72W)
# Note: Transects at 325, 145, 160, 184, 198 and 288 are chosen for comparison with
#       Whitworth et al. (1998) doi: 10.1029/AR075p0001, Figs. 3, 7, 6, 5, 4, 10, respectively.
longitudes = [318., 325., 0., 75., 117., 145., 160., 184., 187., 198., 253.,
              280., 288.]

# The approximate horizontal resolution (in km) of each transect.  Latitude/
# longitude between observation points will be subsampled at this interval.
# Use 'obs' to indicate no subsampling. Use 'mpas' to indicate plotting of
# model data on the native grid, in which case comparison with observations
# will take place on the observation grid.
horizontalResolution = mpas

# The name of the vertical comparison grid.  Valid values are 'mpas' for the
# MPAS vertical grid, 'obs' to use the locations of observations or
# any other name if the vertical grid is defined by 'verticalComparisonGrid'
verticalComparisonGridName = mpas

# A range for the y axis (if any)
verticalBounds = [-1500., 0.]

# a list of fields top plot for each transect.
fieldList = ['temperature', 'salinity']


[woaTemperatureTransects]
## options related to plotting WOA23 transects of potential temperature

# whether the colormap is indexed or continuous
colormapTypeResult = indexed
# color indices into colormapName for filled contours
colormapIndicesResult = [0, 14, 28, 57, 85, 113, 125, 142, 170, 180, 198, 227,
                         240, 255]
# colormap levels/values for contour boundaries
colorbarLevelsResult = [-1.6, -1.2, -0.4, 0.0, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0,
                        3.0, 4.0, 6.0]

# whether the colormap is indexed or continuous
colormapTypeDifference = indexed
# color indices into colormapName for filled contours
colormapIndicesDifference = [0, 28, 57, 85, 113, 128, 128, 142, 170, 198, 227,
                             255]
# colormap levels/values for contour boundaries
colorbarLevelsDifference = [-2, -1.5, -1.25, -1, -0.2, 0, 0.2, 1, 1.25, 1.5, 2]

[woaSalinityTransects]
## options related to plotting WOA23 transects of salinity

# whether the colormap is indexed or continuous
colormapTypeResult = indexed
# color indices into colormapName for filled contours
colormapIndicesResult = [0, 20, 40, 80, 120, 140, 160, 180, 200, 220, 240, 255]
# colormap levels/values for contour boundaries
colorbarLevelsResult = [34.1, 34.2,  34.3,  34.4,  34.5, 34.55, 34.6, 34.65,
                        34.68, 34.7, 35.0]

# whether the colormap is indexed or continuous
colormapTypeDifference = indexed
# color indices into colormapName for filled contours
colormapIndicesDifference = [0, 28, 57, 85, 113, 128, 128, 142, 170, 198, 227,
                             255]
# colormap levels/values for contour boundaries
colorbarLevelsDifference = [-0.5, -0.2, -0.1, -0.05, -0.02, 0,  0.02, 0.05,
                            0.1, 0.2, 0.5]


[woceTransects]
## options related to plotting model vs. World Ocean Circulation Experiment
## (WOCE) transects.

# The approximate horizontal resolution (in km) of each transect.  Latitude/
# longitude between observation points will be subsampled at this interval.
# Use 'obs' to indicate no subsampling. Use 'mpas' to indicate plotting of
# model data on the native grid, in which case comparison with observations
# will take place on the observation grid.
horizontalResolution = mpas

# The name of the vertical comparison grid.  Valid values are 'mpas' for the
# MPAS vertical grid, 'obs' to use the locations of observations or
# any other name if the vertical grid is defined by 'verticalComparisonGrid'
verticalComparisonGridName = mpas

# Horizontal bounds of the plot (in km), or an empty list for automatic bounds
# The bounds are a 2-element list of the minimum and maximum distance along the
# transect
horizontalBounds = {'WOCE_A21': [],
                    'WOCE_A23': [],
                    'WOCE_A12': [],
                    'WOCE_A21_zoom': [630., 830.],
                    'WOCE_A23_zoom': [0., 200.],
                    'WOCE_A12_zoom': [4620., 4820.]}

# A range for the y axis (if any)
verticalBounds = [-4000., 0.]

[woceTemperatureTransects]
## options related to plotting WOCE transects of potential temperature

# whether the colormap is indexed or continuous
colormapTypeResult = indexed
# color indices into colormapName for filled contours
colormapIndicesResult = [0, 14, 28, 57, 85, 113, 125, 142, 170, 180, 198, 227,
                         240, 255]
# colormap levels/values for contour boundaries
colorbarLevelsResult = [-1.6, -1.2, -0.4, 0.0, 0.4, 0.6, 0.8, 1.0, 1.5, 2.0,
                        3.0, 4.0, 6.0]

# whether the colormap is indexed or continuous
colormapTypeDifference = indexed
# color indices into colormapName for filled contours
colormapIndicesDifference = [0, 28, 57, 85, 113, 128, 128, 142, 170, 198, 227,
                             255]
# colormap levels/values for contour boundaries
colorbarLevelsDifference = [-2, -1.5, -1.25, -1, -0.2, 0, 0.2, 1, 1.25, 1.5, 2]

[woceSalinityTransects]
## options related to plotting WOCE transects of salinity

# whether the colormap is indexed or continuous
colormapTypeResult = indexed
# color indices into colormapName for filled contours
colormapIndicesResult = [0, 20, 40, 80, 120, 140, 160, 180, 200, 220, 240, 255]
# colormap levels/values for contour boundaries
colorbarLevelsResult = [34.1, 34.2,  34.3,  34.4,  34.5, 34.55, 34.6, 34.65,
                        34.68, 34.7, 35.0]

# whether the colormap is indexed or continuous
colormapTypeDifference = indexed
# color indices into colormapName for filled contours
colormapIndicesDifference = [0, 28, 57, 85, 113, 128, 128, 142, 170, 198, 227,
                             255]
# colormap levels/values for contour boundaries
colorbarLevelsDifference = [-0.5, -0.2, -0.1, -0.05, -0.02, 0,  0.02, 0.05,
                            0.1, 0.2, 0.5]

[antshipTransects]
## options related to plotting model ship CTD transects.

seasons =  ['JFM']

[oceanRegionalProfiles]
## options related to plotting vertical profiles of regional means (and
## variability) of 3D MPAS fields

regionGroups = ['Arctic Ocean Regions', 'ISMIP6 Greenland Regions', 'Antarctic Regions']


[profilesISMIP6GreenlandRegions]
## options related to plotting vertical profiles Greenland regions


# a list of dictionaries for each field to plot.  The dictionary includes
# prefix (used for file names, task names and sections) as well as the mpas
# name of the field, units for colorbars and a the name as it should appear
# in figure titles and captions.
fields =
    [{'prefix': 'potentialTemperature',
      'mpas': 'timeMonthly_avg_activeTracers_temperature',
      'units': r'$$\degree$$C',
      'titleName': 'Potential Temperature'},
     {'prefix': 'salinity',
      'mpas': 'timeMonthly_avg_activeTracers_salinity',
      'units': r'PSU',
      'titleName': 'Salinity'},
     {'prefix': 'potentialDensity',
      'mpas': 'timeMonthly_avg_potentialDensity',
      'units': r'kg m$$^{-3}$$',
      'titleName': 'Potential Density'}]

# Times for comparison times (Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct,
# Nov, Dec, JFM, AMJ, JAS, OND, ANN)
seasons =  ['ANN']

# minimum and maximum depth of profile plots, or empty for the full depth range
depthRange = []

# maximum depth of cells to be included in profile statistics
maxDepth = 600

# a list of region names from the region masks file to plot
regionNames = ['all']

# web gallery options
profileGalleryGroup = Greenland Regional Profiles

[profilesArcticOceanRegions]
## options related to plotting vertical profiles Antarctic regions


# a list of dictionaries for each field to plot.  The dictionary includes
# prefix (used for file names, task names and sections) as well as the mpas
# name of the field, units for colorbars and a the name as it should appear
# in figure titles and captions.
fields =
    [{'prefix': 'potentialTemperature',
      'mpas': 'timeMonthly_avg_activeTracers_temperature',
      'units': r'$$\degree$$C',
      'titleName': 'Potential Temperature'},
     {'prefix': 'salinity',
      'mpas': 'timeMonthly_avg_activeTracers_salinity',
      'units': r'PSU',
      'titleName': 'Salinity'},
     {'prefix': 'potentialDensity',
      'mpas': 'timeMonthly_avg_potentialDensity',
      'units': r'kg m$$^{-3}$$',
      'titleName': 'Potential Density'}]

# Times for comparison times (Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct,
# Nov, Dec, JFM, AMJ, JAS, OND, ANN)
seasons =  ['ANN']

# minimum and maximum depth of profile plots, or empty for the full depth range
depthRange = []

# maximum depth of cells to be included in profile statistics
maxDepth = None

# a list of region names from the region masks file to plot
regionNames = ['Baffin Bay', 'Barents Sea', 'Canada Basin', 'Greenland Sea', 'Irminger Sea', 'Kara Sea', 'Labrador Sea', 'Norwegian Sea', 'Arctic Ocean - no Barents, Kara Seas']

# web gallery options
profileGalleryGroup = Arctic Ocean Regional Profiles

[profilesAntarcticRegions]
## options related to plotting vertical profiles Antarctic regions


# a list of dictionaries for each field to plot.  The dictionary includes
# prefix (used for file names, task names and sections) as well as the mpas
# name of the field, units for colorbars and a the name as it should appear
# in figure titles and captions.
fields =
    [{'prefix': 'potentialTemperature',
      'mpas': 'timeMonthly_avg_activeTracers_temperature',
      'units': r'$$\degree$$C',
      'titleName': 'Potential Temperature'},
     {'prefix': 'salinity',
      'mpas': 'timeMonthly_avg_activeTracers_salinity',
      'units': r'PSU',
      'titleName': 'Salinity'},
     {'prefix': 'potentialDensity',
      'mpas': 'timeMonthly_avg_potentialDensity',
      'units': r'kg m$$^{-3}$$',
      'titleName': 'Potential Density'}]

# Times for comparison times (Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct,
# Nov, Dec, JFM, AMJ, JAS, OND, ANN)
seasons =  ['ANN']

# minimum and maximum depth of profile plots, or empty for the full depth range
depthRange = [-600., 0.]

# maximum depth of cells to be included in profile statistics
maxDepth = None

# a list of region names from the region masks file to plot
regionNames = ["Southern Ocean 60S", "Weddell Sea Shelf",
               "Weddell Sea Deep", "Bellingshausen Sea Shelf",
               "Bellingshausen Sea Deep", "Amundsen Sea Shelf",
               "Amundsen Sea Deep", "Eastern Ross Sea Shelf",
               "Eastern Ross Sea Deep", "Western Ross Sea Shelf",
               "Western Ross Sea Deep",  "East Antarctic Seas Shelf",
               "East Antarctic Seas Deep"]

# web gallery options
profileGalleryGroup = Antarctic Regional Profiles

[hovmollerOceanRegions]
## options related to plotting Hovmoller diagrams (depth vs. time plots) of
## regional means of 3D MPAS fields

# the names of region groups to plot, each with its own section below
regionGroups = ['Arctic Ocean Regions', 'ISMIP6 Greenland Regions', 'Antarctic Regions']


[hovmollerISMIP6GreenlandRegions]
## options related to plotting Hovmoller diagrams of Arctic Ocean Regions

# a list of dictionaries for each field to plot.  The dictionary includes
# prefix (used for file names, task names and sections) as well as the MPAS
# name of the field, units for colorbars and a the name as it should appear
# in figure titles and captions.
fields =
    [{'prefix': 'potentialTemperature',
      'mpas': 'timeMonthly_avg_activeTracers_temperature',
      'units': r'$$\degree$$C',
      'titleName': 'Potential Temperature'},
     {'prefix': 'salinity',
      'mpas': 'timeMonthly_avg_activeTracers_salinity',
      'units': r'PSU',
      'titleName': 'Salinity'},
     {'prefix': 'potentialDensity',
      'mpas': 'timeMonthly_avg_potentialDensity',
      'units': r'kg m$$^{-3}$$',
      'titleName': 'Potential Density'}]

# a list of region names from the region masks file to plot
regionNames = ['all']

# whether to compute an anomaly with respect to the start of the time series
computeAnomaly = False

# Number of points over which to compute moving average(e.g., for monthly
# output, movingAveragePoints=12 corresponds to a 12-month moving average
# window)
movingAveragePoints = 12


[hovmollerArcticOceanRegions]
## options related to plotting Hovmoller diagrams of Arctic Ocean Regions

# a list of dictionaries for each field to plot.  The dictionary includes
# prefix (used for file names, task names and sections) as well as the MPAS
# name of the field, units for colorbars and a the name as it should appear
# in figure titles and captions.
fields =
    [{'prefix': 'potentialTemperature',
      'mpas': 'timeMonthly_avg_activeTracers_temperature',
      'units': r'$$\degree$$C',
      'titleName': 'Potential Temperature'},
     {'prefix': 'salinity',
      'mpas': 'timeMonthly_avg_activeTracers_salinity',
      'units': r'PSU',
      'titleName': 'Salinity'},
     {'prefix': 'potentialDensity',
      'mpas': 'timeMonthly_avg_potentialDensity',
      'units': r'kg m$$^{-3}$$',
      'titleName': 'Potential Density'}]

# a list of region names from the region masks file to plot
regionNames = ['Baffin Bay', 'Barents Sea', 'Canada Basin', 'Greenland Sea', 'Irminger Sea', 'Kara Sea', 'Labrador Sea', 'Norwegian Sea', 'Arctic Ocean - no Barents, Kara Seas']

# whether to compute an anomaly with respect to the start of the time series
computeAnomaly = False

# Number of points over which to compute moving average(e.g., for monthly
# output, movingAveragePoints=12 corresponds to a 12-month moving average
# window)
movingAveragePoints = 12


[hovmollerAntarcticRegions]
## options related to plotting Hovmoller diagrams of Antarctic Regions

# a list of dictionaries for each field to plot.  The dictionary includes
# prefix (used for file names, task names and sections) as well as the MPAS
# name of the field, units for colorbars and a the name as it should appear
# in figure titles and captions.
fields =
    [{'prefix': 'potentialTemperature',
      'mpas': 'timeMonthly_avg_activeTracers_temperature',
      'units': r'$$\degree$$C',
      'titleName': 'Potential Temperature'},
     {'prefix': 'salinity',
      'mpas': 'timeMonthly_avg_activeTracers_salinity',
      'units': r'PSU',
      'titleName': 'Salinity'},
     {'prefix': 'potentialDensity',
      'mpas': 'timeMonthly_avg_potentialDensity',
      'units': r'kg m$$^{-3}$$',
      'titleName': 'Potential Density'}]

# a list of region names from the region masks file to plot
regionNames = ["Southern Ocean 60S", "Weddell Sea Shelf",
               "Weddell Sea Deep", "Bellingshausen Sea Shelf",
               "Bellingshausen Sea Deep", "Amundsen Sea Shelf",
               "Amundsen Sea Deep", "Eastern Ross Sea Shelf",
               "Eastern Ross Sea Deep", "Western Ross Sea Shelf",
               "Western Ross Sea Deep",  "East Antarctic Seas Shelf",
               "East Antarctic Seas Deep"]

# whether to compute an anomaly with respect to the start of the time series
computeAnomaly = False

# Number of points over which to compute moving average(e.g., for monthly
# output, movingAveragePoints=12 corresponds to a 12-month moving average
# window)
movingAveragePoints = 12


[hovmollerOceanRegionsPotentialTemperature]
## options related to plotting time series of temperature vs. depth in ocean
## regions

# A dictionary with keywords for the norm
normArgsResult = {'vmin': -2., 'vmax': 3.}
normArgsDifference = {'vmin': -2., 'vmax': 2.}

# Number of months over which to compute moving average
movingAveragePoints = 12

# limits on depth, the full range by default
yLim = [-600., -5.]

[hovmollerOceanRegionsSalinity]
## options related to plotting time series of salinity vs. depth in ocean
## regions

# A dictionary with keywords for the norm
normArgsResult = {'vmin': 33., 'vmax': 35.}
normArgsDifference = {'vmin': -0.5, 'vmax': 0.5}

# Number of months over which to compute moving average
movingAveragePoints = 12

# limits on depth, the full range by default
yLim = [-600., -5.]


[hovmollerOceanRegionsPotentialDensity]
## options related to plotting time series of potential density vs. depth in
## ocean regions

# A dictionary with keywords for the norm
normArgsResult = {'vmin': 1026.5, 'vmax': 1028.}
normArgsDifference = {'vmin': -0.3, 'vmax': 0.3}

# Number of months over which to compute moving average
movingAveragePoints = 12

# limits on depth, the full range by default
yLim = [-600., -5.]


[climatologyMapBSF]
## options related to plotting horizontally remapped climatologies of
## the barotropic streamfunction (BSF) against control model results
## (if available)

# comparison grid(s) on which to plot analysis
comparisonGrids = ['latlon', 'arctic_extended', 'antarctic_extended',
                   'subpolar_north_atlantic', 'fris']

[climatologyMapBSFAntarcticExtended]
## options related to plotting Antarctic climatologies of the barotropic
## streamfunction (BSF)

# colormap for model/observations
colormapNameResult = blue-orange-div
# whether the colormap is indexed or continuous
colormapTypeResult = continuous
# color indices into colormapName for filled contours
# the type of norm used in the colormap
normTypeResult = symLog
# A dictionary with keywords for the norm
normArgsResult = {'linthresh': 30., 'linscale': 0.5, 'vmin': -150., 'vmax': 150.}
colorbarTicksResult = [-150., -100.,-60., -40., -20., -10., 0., 10., 20., 40., 60., 100., 150.]
# Adding contour lines to the figure
contourLevelsResult = np.arange(-150., 150.1, 10.)
contourThicknessResult = 0.5
contourColorResult = black
# The spacing (in meters) between arrows on contours in projection plots
# (None to disable)
arrowSpacingResult = 8e5
# The width (in meters) of arrows on contours in projection plots (None to
# disable)
arrowWidthResult = 1.5e4

# colormap for differences
colormapNameDifference = cmo.balance
# whether the colormap is indexed or continuous
colormapTypeDifference = continuous
# the type of norm used in the colormap
normTypeDifference = linear
# A dictionary with keywords for the norm
normArgsDifference = {'vmin': -10., 'vmax': 10.}
# colorbarTicksDifference = numpy.linspace(-10., 10., 9)

# minimum and maximum latitude (degrees) between which the mean BSF on boundary
# vertices averages to zero
latitudeRangeForZeroBSF = (-90.0, -60.0)

[climatologyMapBSFFris]
## options related to plotting Filchner-Ronne climatologies of the barotropic
## streamfunction (BSF)

# colormap for model/observations
colormapNameResult = blue-orange-div
# whether the colormap is indexed or continuous
colormapTypeResult = continuous
# color indices into colormapName for filled contours
# the type of norm used in the colormap
normTypeResult = symLog
# A dictionary with keywords for the norm
normArgsResult = {'linthresh': 1., 'linscale': 0.5, 'vmin': -20., 'vmax': 20.}
colorbarTicksResult = [-20., -10.,-4., -2., -1., -0.5, 0., 0.5, 1., 2., 4., 10., 20.]
# Adding contour lines to the figure
contourLevelsResult = np.arange(-20., 20.1, 0.5)
contourThicknessResult = 0.5
contourColorResult = black
# The spacing (in meters) between arrows on contours in projection plots
# (None to disable)
arrowSpacingResult = 2e5
# The width (in meters) of arrows on contours in projection plots (None to
# disable)
arrowWidthResult = 4e3

# colormap for differences
colormapNameDifference = cmo.balance
# whether the colormap is indexed or continuous
colormapTypeDifference = continuous
# the type of norm used in the colormap
normTypeDifference = linear
# A dictionary with keywords for the norm
normArgsDifference = {'vmin': -2., 'vmax': 2.}
# colorbarTicksDifference = numpy.linspace(-10., 10., 9)

# minimum and maximum latitude (degrees) between which the mean BSF on boundary
# vertices averages to zero
latitudeRangeForZeroBSF = (-90.0, -60.0)


[climatologyMapAntarcticMelt]
## options related to plotting horizontally regridded maps of Antarctic
## sub-ice-shelf melt rates against control model results and observations

# A dictionary with keywords for the norm
normArgsResult = {'linthresh': 1., 'linscale': 0.5, 'vmin': -20., 'vmax': 20.}
colorbarTicksResult = [-20., -10., -5., -2., -1., 0., 1., 2., 5., 10., 20.]

# A dictionary with keywords for the norm
normArgsDifference = {'linthresh': 1., 'linscale': 0.5, 'vmin': -20.,
                      'vmax': 20.}
colorbarTicksDifference = [-20., -10., -5., -2., -1., 0., 1., 2., 5., 10., 20.]

# make a tables of mean melt rates and melt fluxes for individual ice shelves?
makeTables = True

# If making tables, which ice shelves?  This is a list of ice shelves or
# ['all'] for all 106 ice shelves and regions.
iceShelvesInTable = ['all']

[timeSeriesTransport]
## options related to plotting time series of transport through transects
transportGroups = ['Transport Transects', 'Arctic Transport Transects']

[timeSeriesConservation]
## options related to producing time series plots from the conservation
## analysis member, often to compare previous runs

# Plot types to generate. The following plotTypes are supported:
#    total_energy_flux : Total energy flux
#    absolute_energy_error : Energy error
#    ice_salt_flux : Salt flux related to land ice and sea ice
#    absolute_salt_error : Salt conservation error
#    total_mass_flux : Total mass flux
#    total_mass_change : Total mass anomaly
#    land_ice_mass_change : Mass anomaly due to land ice fluxes
#    land_ice_ssh_change : SSH anomaly due to land ice fluxes
#    land_ice_mass_flux_components : Mass fluxes from land ice
plotTypes = ['absolute_energy_error', 'absolute_salt_error', 'total_mass_change', 'land_ice_mass_flux_components', 'land_ice_mass_change']


[timeSeriesArcticOceanRegions]
## options related to plotting time series of Antarctic regions

# list of regions to plot or ['all'] for all regions in the masks file.
# See "regionNames" in the antarcticRegions masks file in
# regionMaskSubdirectory for details.
regionNames = ['all']


[timeSeriesAntarcticRegions]
## options related to plotting time series of Antarctic regions

# list of regions to plot or ['all'] for all regions in the masks file.
# See "regionNames" in the antarcticRegions masks file in
# regionMaskSubdirectory for details.
regionNames = ['all']
